<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd

		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd">


    <context:annotation-config/>

    <jpa:repositories base-package="com.kingyon"/>

    <!-- 扫描除了controller以外的所有 component -->
    <context:component-scan base-package="com.kingyon">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 利用Spring的实体管理器工厂来创建JPA实体管理器 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="ds"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="MYSQL"/>
                <property name="showSql" value="true"/>
                <property name="generateDdl" value="true"/>
            </bean>
        </property>
        <property name="packagesToScan" value="com.kingyon"/>
        <property name="jpaProperties">
            <props>
                <!-- 命名规则 My_NAME->MyName -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL57InnoDBDialect</prop>
                <prop key="hibernate.generate_statistics">false</prop>
                <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
            </props>
        </property>
    </bean>

    <!-- 声明一个Spring提供的JPA事务管理器，传入的参数是Spring中的实体管理器工厂 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 注解事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--redis template definition-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

    <bean id="jedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="usePool" value="true"/>
        <property name="hostName" value="${application.redis.server}"/>
        <property name="port" value="${application.redis.port}"/>
        <property name="database" value="${application.redis.database}"/>
        <property name="password" value="${application.redis.password}"/>
        <property name="timeout" value="${application.redis.timeout}"/>
        <property name="poolConfig">
            <bean class="redis.clients.jedis.JedisPoolConfig">
                <property name="maxIdle" value="${application.redis.pool.maxIdel}"/>
                <property name="minEvictableIdleTimeMillis"
                          value="${application.redis.pool.minEvictableIdleTimeMillis}"/>
                <property name="numTestsPerEvictionRun" value="${application.redis.pool.numTestsPerEvictionRun}"/>
                <property name="timeBetweenEvictionRunsMillis"
                          value="${application.redis.pool.timeBetweenEvictionRunsMillis}"/>
            </bean>
        </property>
    </bean>

    <beans profile="development">
        <context:property-placeholder ignore-unresolvable="true" location="classpath*:/application.properties"/>

        <bean id="ds" class="com.alibaba.druid.pool.DruidDataSource">
            <!-- Connection Info -->
            <property name="driverClassName" value="${application.jdbc.driver}"/>
            <property name="url" value="${application.jdbc.url}"/>
            <property name="username" value="${application.jdbc.username}"/>
            <property name="password" value="${application.jdbc.password}"/>
            <!-- Connection Pooling Info -->
            <property name="maxActive" value="${application.jdbc.pool.maxActive}"/>
            <property name="maxIdle" value="${application.jdbc.pool.maxIdle}"/>
            <property name="minIdle" value="${application.jdbc.pool.minIdle}"/>
            <property name="defaultAutoCommit" value="${application.jdbc.pool.defaultAutoCommit}"/>
            <property name="filters" value="stat"/>
            <!-- conection encoding -->
            <property name="connectionInitSqls" value="set names utf8mb4;"/>
        </bean>

    </beans>

    <beans profile="test">
        <context:property-placeholder ignore-unresolvable="true" location="classpath*:/application_test.properties"/>
        <jee:jndi-lookup jndi-name="java:comp/env/jdbc/jndi" id="ds"/>
    </beans>

    <beans profile="production">
        <context:property-placeholder ignore-unresolvable="true"
                                      location="classpath*:/application_production.properties"/>
        <jee:jndi-lookup jndi-name="java:comp/env/jdbc/jndi" id="ds"/>
    </beans>
</beans>